Docker Playground (Having a docker swarm cluster on cloud for free):
====================================================================
Link: https://labs.play-with-docker.com/
Duration: 4 hours Limit then everything is deleted

Section 3: Working with Volumes
-------------------------------

-> Anonymous and named volumes managed by docker
-> Bind mounts are managed by us
-> If there is a conflicting container dir that is mounted by two volumes, then the longest cont dir path overwrites others
-> If docker is using WSL then the correct WSL path to our mounted C: drive should be given

Section 4: Networking in Containers
-----------------------------------

-> host.docker.internal can be used if we want to point to the IP address of our local machine running docker.
-> If we run an app and a db container (without mapping ports -p), the app cont can still communicate with the db cont
   By using the internal IP address of db cont which we can get using the docker inspect <db_cont_name> command

-> without docker-compose, once we run a container with --network flag, we can refer it from another container on the
   same network by using the name of the container in the URL

Section 5: Multi-Container Applications:
----------------------------------------

-> We can make use of named volumes to stop bind mounts overriding the subdirectories. This can help us mount the entire
   backend app directory and make live changes/reloads without the need to setup everything locally.

-> We can define ENV with defaults in Dockerfile, this can help with documenting the variables that are needed.
   Users can now mention required environment variables using -e env by looking at the Dockerfile

Section 6: Multi-Container Orchestration
----------------------------------------

-> When defining a bind mount path, its allowed to use a relative path if we are mentioning it in the docker-compose
   If we are defining it while running a container then absolute path is a must for bind mounts

Section 7: Utility Containers
-----------------------------

-> Just Run the OS in the container and then issue the commands directly when doing docker run 
   It can also be done by using docker compose run 


